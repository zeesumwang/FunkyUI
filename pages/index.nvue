<template>
	<view ref="index">

		<fk-tab ref="main-tab" :debug="false" @pageChange="pageChange" @lockTouch="listScrollable = false" @unlockTouch="listScrollable = true"
		 :pageList="fabList" :defaultPageId="'home'" :easingFunction="easingFunction" :hasHidePage="true" :bindFabExpression="bindFabExpression"
		 :bindFabProperty="bindFabProperty" :fabStyles="fabStyles" :fabBackgroundColor="'#1e1e1e'" :backgroundColor="'#0b0b0b'"
		 :fabOpacity="0.96" :fabBlurEffect="'dark'" :fabElevation="15" :height="screenHeightPx" :width="screenWidthPx"
		 :indicatorBias="15" :bounceMode="true">
			<template v-slot:fab>
				<view @tap="fabTap($event,index)" v-for="(item, index) in fabList" :key="item.id" :id="item.id" :ref="item.id"
				 :style="{opacity: index == 0 ? 1 : 0.2}" style="padding: 15px;">
					<image :src="item.url" style="width: 20px;height: 20px;" :style="{borderRadius: item.id == 'user' ? '25px' : 0}">
					</image>
				</view>
			</template>

			<template v-slot:indicator>
				<view style="
					height: 6px;
					width: 24px;
					border-top-right-radius: 6px;
					border-top-left-radius: 6px;
					border-bottom-width: 1px;
					border-bottom-color: #ec7d9c;
					background-image: linear-gradient(to bottom, #ffffff, #ec7d9c);">
				</view>
			</template>

			<template v-slot:hidePage>
				<fk-video-list :videoData="videoData" :isPlay="currentPage==-1" @videoChange="videoChange">

				</fk-video-list>
			</template>

			<template v-slot:mainPage0>
				
				<view :style="{height: statusBarHeight + 'px'}"></view>
				<fk-list :width="screenWidthPx" :height="screenHeightPx - statusBarHeight" :hasRefresh="true" :scrollable="listScrollable"
				 :isRefresh="isRefresh" @refreshing="refreshing">
					<fk-cell v-for="(item, index) in data" :key="index" style="justify-content: center;align-items: center;">
						<view style="height: 220px;border-radius: 4px;margin-bottom: 5px;justify-content: center;align-items: center;background-color: #1a181a;"
						 :style="{width: screenWidthPx + 'px'}">
							<text style="color: #ebebeb">{{item}}</text>
						</view>
					</fk-cell>
				</fk-list>
					
			</template>

			<template v-slot:mainPage1>
				<view :style="{height: statusBarHeight + 'px'}"></view>
				<fk-list :width="screenWidthPx" :height="screenHeightPx - statusBarHeight" :hasRefresh="true" :scrollable="listScrollable"
				 :isRefresh="isRefresh" @refreshing="refreshing">
					<fk-cell v-for="(item, index) in data" :key="index" style="justify-content: center;align-items: center;">
						<view style="height: 220px;border-radius: 4px;margin-bottom: 5px;justify-content: center;align-items: center;background-color: #1a181a;"
						 :style="{width: screenWidthPx + 'px'}">
							<text style="color: #ebebeb">{{item}}</text>
						</view>
					</fk-cell>
				</fk-list>
			</template>

			<template v-slot:mainPage2>
				<userPage :easingFunction="easingFunction"></userPage>
				
			</template>

			<template v-slot:mainPage3>
				<userPage :easingFunction="easingFunction"></userPage>

			</template>
		</fk-tab>
		
		<fk-float-button @subButtonTap="subButtonTap"></fk-float-button>

	</view>

</template>

<script>
	import screenInfo from "@/funky-ui/common/helper.js"
	import testData from "@/test_data/data.js"

	import userPage from "@/pages/userPage/userPage"

	export default {
		components: {
			userPage
		},
		data() {
			return {
				fabList: [{
						id: 'home',
						url: "/static/home.png"
					},
					{
						id: 'search',
						url: "/static/search.png"
					},
					{
						id: 'message',
						url: "/static/flash.png"
					},
					{
						id: 'user',
						url: "/static/logo.jpg"
					}
				],
				data: [],
				screenHeightPx: 0,
				screenWidthPx: 0,
				statusBarHeight: 0,
				isRefresh: false,
				videoData: [],
				bindFabExpression: '',
				bindFabProperty: '',
				fabStyles: {},
				listScrollable: true,
				contentOffsetX: 0,
				
				easingFunction: 'easeOutQuart',
				
				currentPage: 0,
			}
		},
		onPullDownRefresh() {
			console.log("页面下拉刷新!")
			setTimeout(() => {
				uni.stopPullDownRefresh
			}, 2000)
		},
		onLoad() {
			this.screenHeightPx = screenInfo.screenHeightPx
			this.screenWidthPx = screenInfo.screenWidthPx
			this.statusBarHeight = screenInfo.system.statusBarHeight
			for (var i = 0; i < 20; i++) {
				this.data.push(i)
			}
			this.videoData = testData.videoData
		},
		onReady() {
			// this.fabTap({target:{id:'home'}},0)
		},
		created() {
			if (screenInfo.system.platform == 'ios') {
				if(screenInfo.system.safeAreaInsets.bottom !== 0) {
					var fabHeight = screenInfo.system.safeAreaInsets.bottom
				}
				else {
					var fabHeight = this.statusBarHeight
				}
			} else {
				var fabHeight = this.statusBarHeight
			}
			var fabMaxTranslateY = fabHeight * 3
			this.bindFabExpression =
				`${fabMaxTranslateY} * (x < ${screenInfo.realScreenWidth} ? (1 - x / ${screenInfo.realScreenWidth}) : 0)`
			this.bindFabProperty = 'transform.translateY'
			this.fabStyles = {
				'height': '50px',
				'position': 'fixed',
				'justifyContent': 'space-around',
				'alignItems': 'center',
				'flexDirection': 'row',
				'borderRadius': '25px',
				'borderWidth': '3px',
				'borderColor': '#ec7d9c',
				'left': this.screenWidthPx * (1 - 0.618) * 0.5 + 'px',
				'bottom': fabHeight + 'px',
				'width': this.screenWidthPx * 0.618 + 'px'
			}
		},
		methods: {
			getEl: function(e) {
				if (typeof(e[0]) == 'object') {
					return e[0].ref
				} else {
					return e.ref
				}
			},
			refreshing: function() {
				this.isRefresh = true
				setTimeout(() => {
					this.isRefresh = false
				}, 2000)
			},
			pageChange: function(e) {
				this.currentPage = e.currentPage
			},
			fabTap: function(e, index) {
				let pageId = 'page-' + e.target.id
				this.$refs['main-tab'].scrollToPage(pageId)
			},
			subButtonTap: function(e) {
				if(e == 'subButton2') {
					
				}
			}
		}
	};
</script>

<style>

</style>
